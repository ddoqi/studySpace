{"ast":null,"code":"var _jsxFileName = \"/Users/hongdakyung/week-1/src/App.js\";\n// src/App.js\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(GrandFather, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nfunction GrandFather() {\n  const grandFatherName = \"grandFatherName\";\n  return /*#__PURE__*/_jsxDEV(Mother, {\n    grandFatherName: grandFatherName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n}\n\n// Mother가 가지고 있는 name을 Child로 내려주고 싶음\n_c2 = GrandFather;\nfunction Mother(props) {\n  const name = \"홍부인\";\n  console.log(\"grandFatherName:\", props.grandFatherName);\n  // 이런식으로 자식 컴포넌트에 내려줄 수 있음\n  return /*#__PURE__*/_jsxDEV(Child, {\n    grandFatherName: props.grandFatherName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 10\n  }, this);\n}\n\n// 이 props는 컴포넌트 간의 정보를 교류할 때 사용이 된다.\n_c3 = Mother;\nfunction Child(props) {\n  console.log(\"props : \", props);\n  console.log(\"props.grandFatherName : \", props.grandFatherName);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: props.grandFatherName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n_c4 = Child;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"GrandFather\");\n$RefreshReg$(_c3, \"Mother\");\n$RefreshReg$(_c4, \"Child\");","map":{"version":3,"names":["React","App","GrandFather","grandFatherName","Mother","props","name","console","log","Child"],"sources":["/Users/hongdakyung/week-1/src/App.js"],"sourcesContent":["// src/App.js\nimport React from \"react\";\n\nfunction App() {\n  return <GrandFather />;\n}\n\nfunction GrandFather() {\n  const grandFatherName = \"grandFatherName\";\n  return <Mother grandFatherName={grandFatherName} />;\n}\n\n// Mother가 가지고 있는 name을 Child로 내려주고 싶음\n\nfunction Mother(props) {\n  const name = \"홍부인\";\n  console.log(\"grandFatherName:\", props.grandFatherName);\n  // 이런식으로 자식 컴포넌트에 내려줄 수 있음\n  return <Child grandFatherName={props.grandFatherName} />;\n}\n\n// 이 props는 컴포넌트 간의 정보를 교류할 때 사용이 된다.\nfunction Child(props) {\n  console.log(\"props : \", props);\n  console.log(\"props.grandFatherName : \", props.grandFatherName);\n\n  return <div>{props.grandFatherName}</div>;\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,SAASC,GAAG,GAAG;EACb,oBAAO,QAAC,WAAW;IAAA;IAAA;IAAA;EAAA,QAAG;AACxB;AAAC,KAFQA,GAAG;AAIZ,SAASC,WAAW,GAAG;EACrB,MAAMC,eAAe,GAAG,iBAAiB;EACzC,oBAAO,QAAC,MAAM;IAAC,eAAe,EAAEA;EAAgB;IAAA;IAAA;IAAA;EAAA,QAAG;AACrD;;AAEA;AAAA,MALSD,WAAW;AAOpB,SAASE,MAAM,CAACC,KAAK,EAAE;EACrB,MAAMC,IAAI,GAAG,KAAK;EAClBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEH,KAAK,CAACF,eAAe,CAAC;EACtD;EACA,oBAAO,QAAC,KAAK;IAAC,eAAe,EAAEE,KAAK,CAACF;EAAgB;IAAA;IAAA;IAAA;EAAA,QAAG;AAC1D;;AAEA;AAAA,MAPSC,MAAM;AAQf,SAASK,KAAK,CAACJ,KAAK,EAAE;EACpBE,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,KAAK,CAAC;EAC9BE,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,KAAK,CAACF,eAAe,CAAC;EAE9D,oBAAO;IAAA,UAAME,KAAK,CAACF;EAAe;IAAA;IAAA;IAAA;EAAA,QAAO;AAC3C;AAAC,MALQM,KAAK;AAOd,eAAeR,GAAG;AAAC;AAAA;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}